{"version":3,"sources":["components/ChooseYourPizza/components/Size/assets/pizza.svg","components/ChooseYourPizza/components/Topping/assets/anchovy.svg","components/ChooseYourPizza/components/Topping/assets/bacon.svg","components/ChooseYourPizza/components/Topping/assets/basil.svg","components/ChooseYourPizza/components/Topping/assets/chili.svg","components/ChooseYourPizza/components/Topping/assets/mozzarella.svg","components/ChooseYourPizza/components/Topping/assets/mushroom.svg","components/ChooseYourPizza/components/Topping/assets/olive.svg","components/ChooseYourPizza/components/Topping/assets/onion.svg","components/ChooseYourPizza/components/Topping/assets/pepper.svg","components/ChooseYourPizza/components/Topping/assets/pepperoni.svg","components/ChooseYourPizza/components/Topping/assets/sweetcorn.svg","components/ChooseYourPizza/components/Topping/assets/tomato.svg","components/Section/Section.jsx","components/Input/Input.jsx","components/EnterYourDetails/EnterYourDetails.jsx","components/ChooseYourPizza/components/Size/Size.jsx","components/ChooseYourPizza/components/Topping/Topping.jsx","PropTypes/Size.js","PropTypes/Topping.js","components/ChooseYourPizza/ChooseYourPizza.jsx","components/OrderSummaryList/components/Item/Item.jsx","components/OrderSummaryList/OrderSummaryList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","styled","h2","Children","div","Section","title","children","Layout","Label","label","StyledInput","input","Required","span","Input","required","defaultProps","Item","EnterYourDetails","Pizza","img","size","selected","Name","Size","percentage","name","onSelect","onClick","src","pizza","alt","TOPPING_IMAGE","anchovy","bacon","basil","chili","mozzarella","mushroom","olive","onion","pepper","pepperoni","sweetcorn","tomato","chosen","css","Image","Topping","onChoose","image","PropTypes","string","number","SubSection","h3","SizeLayout","SizeItem","ToppingLayout","ToppingItem","ChooseYourPizza","sizes","selectedSize","onSizeSelected","toppings","chosenToppings","onToppingChosen","map","key","topping","includes","ToppingsUnorderedList","ul","price","Total","OrderSummaryList","reduce","prevValue","toFixed","PlaceOrderButton","button","SIZES","TOPPINGS","App","props","state","handleSelectSize","bind","handleChooseTopping","this","setState","prevState","filter","chosenTopping","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d74749fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza.e5b98a71.svg\";","module.exports = __webpack_public_path__ + \"static/media/anchovy.b9bcd606.svg\";","module.exports = __webpack_public_path__ + \"static/media/bacon.f43caed9.svg\";","module.exports = __webpack_public_path__ + \"static/media/basil.95d0fbca.svg\";","module.exports = __webpack_public_path__ + \"static/media/chili.8b978026.svg\";","module.exports = __webpack_public_path__ + \"static/media/mozzarella.fac5b5cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/mushroom.b4262e03.svg\";","module.exports = __webpack_public_path__ + \"static/media/olive.0b738377.svg\";","module.exports = __webpack_public_path__ + \"static/media/onion.3b7cc9b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/pepper.eadfa491.svg\";","module.exports = __webpack_public_path__ + \"static/media/pepperoni.416fc645.svg\";","module.exports = __webpack_public_path__ + \"static/media/sweetcorn.0360b1e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato.93558262.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h2`\n  color: #6E7790;\n  font-size: 22px;\n  margin: 0;\n  margin-bottom: 10px;\n  font-weight: 300;\n`;\n\nconst Children = styled.div`\n  padding: 10px 0 20px 0;\n`;\n\nconst Section = ({\n  title,\n  children,\n}) => (\n  <>\n    <Title>{title}</Title>\n    <Children>{children}</Children>\n  </>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Layout = styled.div`\n`;\n\nconst Label = styled.label`\n  font-size: 12px;\n  font-weight: 700;\n  color: rgba(0,0,0,0.6);\n  display: block;\n  margin-bottom: 10px;\n`;\n\nconst StyledInput = styled.input`\n  background: #fff;\n  border-radius: 2px;\n  border: 1px solid #d7d7e7;\n  font-size: 18px;\n  padding: 10px 15px;\n  outline: none;\n  color: rgba(0,0,0,0.8);\n  width: 100%;\n`;\n\nconst Required = styled.span`\n  color: #E01D3B;\n  font-weight: 700;\n  display: inline-block;\n  margin-left: 0.25rem;\n`;\n\nconst Input = ({\n  label,\n  required\n}) => (\n  <Layout>\n    <Label>\n      {label}\n      {required && (<Required>*</Required>)}\n    </Label>\n    <StyledInput />\n  </Layout>\n);\n\nInput.defaultProps = {\n  required: false,\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n};\n\nexport default Input;","import React from 'react';\nimport styled from 'styled-components';\nimport Section from '../Section';\nimport Input from '../Input';\n\nconst Layout = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst Item = styled.div`\n  width: calc(100%/3 - 20px);\n  margin-bottom: 20px;\n`;\n\nconst EnterYourDetails = () => (\n  <Section\n    title=\"Enter your details\"\n  >\n    <Layout>\n      <Item>\n        <Input required label=\"NAME\" />\n      </Item>\n      <Item>\n        <Input required label=\"EMAIL\" />\n      </Item>\n      <Item>\n        <Input required label=\"CONFIRM EMAIL\" />\n      </Item>\n      <Item>\n        <Input required label=\"ADDRESS\" />\n      </Item>\n      <Item>\n        <Input required label=\"POSTCODE\" />\n      </Item>\n      <Item>\n        <Input required label=\"CONTACT\" />\n      </Item>\n    </Layout>\n  </Section>\n);\n\nexport default EnterYourDetails;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport pizza from './assets/pizza.svg';\nimport styled from 'styled-components';\n\nconst Pizza = styled.img`\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  margin-right: 20px;\n  border: 2px solid ${({ selected }) => selected ? '#dddddd' : 'transparent'};\n  border-radius: 50%;\n  padding: 2px;\n`;\n\nconst Layout = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  font-size: 16px;\n  color: ${({ selected }) => selected ? '#1a98e1' : 'rgba(0,0,0,0.7)'};\n`;\n\nconst Size = ({\n  percentage,\n  name,\n  selected,\n  onSelect,\n}) => {\n  const size = 80 * percentage;\n\n  return (\n    <Layout onClick={onSelect}>\n      <Pizza size={size} src={pizza} alt={name} selected={selected} />\n      <Name selected={selected}>{name}</Name>\n    </Layout>\n  );\n\n};\n\nSize.defaultProps = {\n  selected: false,\n}\n\nSize.propTypes = {\n  percentage: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default Size;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport anchovy from './assets/anchovy.svg';\nimport bacon from './assets/bacon.svg';\nimport basil from './assets/basil.svg';\nimport chili from './assets/chili.svg';\nimport mozzarella from './assets/mozzarella.svg';\nimport mushroom from './assets/mushroom.svg';\nimport olive from './assets/olive.svg';\nimport onion from './assets/onion.svg';\nimport pepper from './assets/pepper.svg';\nimport pepperoni from './assets/pepperoni.svg';\nimport sweetcorn from './assets/sweetcorn.svg';\nimport tomato from './assets/tomato.svg';\n\nconst TOPPING_IMAGE = {\n  anchovy,\n  bacon,\n  basil,\n  chili,\n  mozzarella,\n  mushroom,\n  olive,\n  onion,\n  pepper,\n  pepperoni,\n  sweetcorn,\n  tomato,\n};\n\nconst Layout = styled.div`\n  display: flex;\n  align-items: center;\n  background: rgba(0,0,0,0.05);\n  cursor: pointer;\n  ${({ chosen }) => chosen && css`\n    background: #1a98e1;\n    color: white;\n  `}\n`;\n\nconst Image = styled.img`\n  height: 30px;\n  width: 30px;\n  background: #e6e6e6;\n  padding: 10px;\n  box-sizing: content-box;\n`;\n\nconst Name = styled.div`\n  padding-left: 10px;\n  font-weight: 300;\n  text-transform: capitalize;\n`;\n\nconst Topping = ({\n  name,\n  chosen,\n  onChoose,\n}) => {\n  const image = TOPPING_IMAGE[name];\n\n  return (\n    <Layout chosen={chosen} onClick={onChoose}>\n      <Image src={image} />\n      <Name>{name}</Name>\n    </Layout>\n  );\n}\n\nTopping.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default Topping;\n","import PropTypes from 'prop-types';\n\nexport default {\n  name: PropTypes.string,\n  price: PropTypes.number,\n  percentage: PropTypes.number,\n}","import PropTypes from 'prop-types';\n\nexport default {\n  name: PropTypes.string,\n  price: PropTypes.number,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../Section';\nimport styled from 'styled-components';\nimport Size from './components/Size';\nimport Topping from './components/Topping';\nimport SizePropTypes from '../../PropTypes/Size';\nimport ToppingPropTypes from '../../PropTypes/Topping';\n\nconst SubSection = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.h3`\n  color: #6E7790;\n  font-size: 16px;\n  position: relative;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nconst SizeLayout = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SizeItem = styled.div`\n  margin: 20px 0;\n  width: calc(100%/3 - 20px);\n`;\n\nconst ToppingLayout = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nconst ToppingItem = styled.div`\n  margin: 10px 0;\n  width: calc(100%/4 - 10px);\n`;\n\nconst ChooseYourPizza = ({\n  sizes,\n  selectedSize,\n  onSizeSelected,\n  toppings,\n  chosenToppings,\n  onToppingChosen,\n}) => (\n  <Section\n    title=\"Choose your pizza\"\n  >\n    <SubSection>\n      <Title>Select the size</Title>\n      <SizeLayout>\n        {sizes.map((size) => (\n          <SizeItem key={size.name}>\n            <Size \n              percentage={size.percentage} \n              name={size.name} \n              selected={selectedSize === size}\n              onSelect={() => onSizeSelected(size)}\n            />\n          </SizeItem>\n        ))}\n      </SizeLayout>\n    </SubSection>\n    <SubSection>\n      <Title>Pick your toppings</Title>\n      <ToppingLayout>\n        {toppings.map((topping) => (\n          <ToppingItem key={topping.name}>\n            <Topping \n              name={topping.name} \n              chosen={chosenToppings.includes(topping)}\n              onChoose={() => onToppingChosen(topping)}\n            />\n          </ToppingItem>\n        ))}\n      </ToppingLayout>\n    </SubSection>\n  </Section>\n);\n\nChooseYourPizza.propTypes = {\n  chosenToppings: [],\n};\n\nChooseYourPizza.propTypes = {\n  sizes: PropTypes.arrayOf(PropTypes.shape(SizePropTypes)).isRequired,\n  selectedSize: PropTypes.shape(SizePropTypes).isRequired,\n  onSizeSelected: PropTypes.func.isRequired,\n  toppings: PropTypes.arrayOf(PropTypes.shape(ToppingPropTypes)).isRequired,\n  chosenToppings: PropTypes.arrayOf(PropTypes.shape(ToppingPropTypes)),\n  onToppingChosen: PropTypes.func.isRequired,\n}\n\nexport default ChooseYourPizza;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport SizePropTypes from '../../../../PropTypes/Size';\nimport ToppingPropTypes from '../../../../PropTypes/Topping';\n\nconst Size = styled.h3`\n  margin: 0;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n  margin-bottom: 5px;\n  font-weight: 300;\n`;\n\nconst ToppingsUnorderedList = styled.ul`\n  margin: 0;\n`;\n\nconst Topping = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 3px;\n  font-weight: 300;\n`;\n\nconst Name = styled.div`\n  text-transform: capitalize;\n`;\n\nconst Item = ({\n  size,\n  toppings,\n}) => (\n  <div>\n    <Size>\n      <Name>{size.name}</Name>\n      <div>${size.price}</div>\n    </Size>\n    <ToppingsUnorderedList>\n      {toppings.map((topping) => (\n        <li key={topping.name}>\n          <Topping>\n            <Name>{topping.name}</Name>\n            <div>${topping.price}</div>\n          </Topping>\n        </li>\n      ))}\n    </ToppingsUnorderedList>\n  </div>\n);\n\nItem.defaultProps = {\n  toppings: [],\n};\n\nItem.propTypes = {\n  size: PropTypes.shape(SizePropTypes).isRequired,\n  toppings: PropTypes.arrayOf(PropTypes.shape(ToppingPropTypes)),\n};\n\nexport default Item;","import React from 'react';\nimport Section from '../Section';\nimport Item from './components/Item';\nimport styled from 'styled-components';\n\nconst Total = styled.div`\n  text-align: right;\n  font-size: 18px;\n  font-weight: 300;\n`;\n\nconst getTotal = (size, toppings) => {\n  const value = toppings.reduce((prevValue, { price }) => prevValue + price, size.price);\n\n  return value.toFixed(2);\n};\n\nconst OrderSummaryList = ({\n  selectedSize,\n  chosenToppings,\n}) => (\n  <Section\n    title=\"Order summary\"\n  >\n    <Item \n      size={selectedSize}\n      toppings={chosenToppings}\n    />\n    <hr />\n    <Total>\n      {`Total: $${getTotal(selectedSize, chosenToppings)}`}\n    </Total>\n  </Section>\n);\n\nexport default OrderSummaryList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport EnterYourDetails from './components/EnterYourDetails';\nimport ChooseYourPizza from './components/ChooseYourPizza';\nimport OrderSummaryList from './components/OrderSummaryList';\n\nconst Layout = styled.div`\n  padding: 20px 30px;\n`;\n\nconst PlaceOrderButton = styled.button`\n  border: 0;\n  outline: 0;\n  background: #98C550;\n  font-size: 18px;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 10px 15px;\n  width: 100%;\n  color: white;\n\n  &:hover {\n    background: #b9ea6a;\n  }\n`;\n\nconst SIZES = [{\n  percentage: 1, \n  name: 'Large (13\")',\n  price: 13.99,\n}, {\n  percentage: 0.85, \n  name: 'Medium (11\")',\n  price: 11.99,\n},\n{\n  percentage: 0.7, \n  name: 'Small (9\")',\n  price: 9.99,\n}];\n\nconst TOPPINGS = [{ \n  name: 'anchovy',\n  price: 0.99\n}, { \n  name: 'bacon',\n  price: 0.99\n}, { \n  name: 'basil',\n  price: 0.99\n}, { \n  name: 'chili',\n  price: 0.99\n}, { \n  name: 'mozzarella',\n  price: 0.99\n}, { \n  name: 'mushroom',\n  price: 0.99\n}, { \n  name: 'olive',\n  price: 0.99\n}, { \n  name: 'onion',\n  price: 0.99\n}, { \n  name: 'pepper',\n  price: 0.99\n}, { \n  name: 'pepperoni',\n  price: 0.99\n}, { \n  name: 'sweetcorn',\n  price: 0.99\n}, { \n  name: 'tomato',\n  price: 0.99\n}];\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedSize: SIZES[0],\n      chosenToppings: [],\n    };\n\n    this.handleSelectSize = this.handleSelectSize.bind(this);\n    this.handleChooseTopping = this.handleChooseTopping.bind(this);\n  }\n\n  handleSelectSize(size) {\n    this.setState({\n      selectedSize: size,\n    });\n  }\n\n  handleChooseTopping(topping) {\n\n    this.setState((prevState) => {\n      const { chosenToppings } = prevState;\n\n      if (chosenToppings.includes(topping)) {\n        return {\n          chosenToppings: chosenToppings.filter((chosenTopping) => chosenTopping !== topping),\n        };\n      }\n\n      return {\n        chosenToppings: [\n          ...chosenToppings,\n          topping,\n        ],\n      };\n    })\n  }\n\n  render() {\n    const { selectedSize, chosenToppings } = this.state;\n\n    return (\n      <Layout>\n        <EnterYourDetails />\n        <ChooseYourPizza \n          sizes={SIZES}\n          selectedSize={selectedSize}\n          onSizeSelected={this.handleSelectSize}\n          toppings={TOPPINGS}\n          chosenToppings={chosenToppings}\n          onToppingChosen={this.handleChooseTopping}\n        />\n        <OrderSummaryList \n          selectedSize={selectedSize}\n          chosenToppings={chosenToppings}\n        />\n        <PlaceOrderButton>Place order</PlaceOrderButton>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}